<?xml version="1.0" encoding="utf-8"?>

<!-- This is an auto generated file and is not intended for modification. -->

<mx:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				xmlns:flexui="flexunit.flexui.*"
				minWidth="955" minHeight="600" creationComplete="onCreationComplete()"
				layout="absolute">
	<fx:Script>
		<![CDATA[
			import com.codecatalyst.promise.tests.TestDeferred;
			import com.codecatalyst.promise.tests.TestjQuery;
			import com.codecatalyst.promise.tests.TestCallbacks;
			import com.codecatalyst.promise.tests.TestPromise;
			import org.flexunit.runner.Request;
			
			public function currentRunTestSuite():Array
			{
				var testsToRun:Array = new Array();
				
				testsToRun.push(Request.methods(com.codecatalyst.promise.tests.TestPromise,["testConstruction",
					"testConstruction_parameterized",
					"testResolve",
					"testReject",
					"testUpdate_withResolve",
					"testUpdate_withCancel",
					"testUpdate_withReject",
					"testCancel",
					"testAlways_withCancel",
					"testAlways_withResolve",
					"testPipe_forTransform_withResolve",
					"testPipe_forTransform_withReject",
					"testPipe_forTransform_withUpdateAndResolve",
					"testPipe_forTransform_withThenAndResolve"]));
				
				testsToRun.push(Request.methods(com.codecatalyst.promise.tests.TestCallbacks,["test_jQueryCallbacks"]));
				
				testsToRun.push(Request.methods(com.codecatalyst.promise.tests.TestjQuery,["test_jQueryDeferred",
					"test_jQueryDeferred_chainability",
					"test_jQueryDeferred_filterWithResolve",
					"test_jQueryDeferred_filterWithReject",
					"test_jQueryDeferred_filterWithProgress",
					"test_jQueryDeferred_pipeWithDone",
					"test_jQueryDeferred_pipeWithFail",
					"test_jQueryDeferred_pipeWithProgress",
					"test_jQuery_when",
					"test_jQuery_whenJoined"]));
				
				testsToRun.push(Request.methods(com.codecatalyst.promise.tests.TestDeferred,["testConstruction",
					"testConstruction_parameterized",
					"testResolve",
					"testResolve_asynch",
					"testReject_withCallbacks",
					"testReject_beforeCallbacks",
					"testUpdate_withResolve",
					"testUpdate_withCancel",
					"testUpdate_withReject"]));
				return testsToRun;
			}
			
			
			private function onCreationComplete():void
			{
				testRunner.runWithFlexUnit4Runner(currentRunTestSuite(), "promise-as3");
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<flexui:FlexUnitTestRunnerUI id="testRunner" portNumber="8765">
	</flexui:FlexUnitTestRunnerUI>
</mx:Application>
